<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- Enable component scanning for Spring components (@Service, @Repository, etc) -->
    <context:component-scan base-package="progfun.spring.data.repository"/>

    <!-- activate annotation-based transaction management configuration (@Transactional) -->
    <tx:annotation-driven/>

    <!-- creates the in-memory datasource using H2 -->
    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:schema.sql"/>
        <jdbc:script location="classpath:test-data.sql"/>
    </jdbc:embedded-database>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf"/>
    </bean>

    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <!-- using Hibernate as persistence provider -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="H2"/>
            </bean>
        </property>
        <!-- Spring 3.1 feature setting up JPA without persitence.xml.
             This will trigger Spring to scan for classes annotated with @Entity and @MappedSuperclass
             and automatically add those to the JPA PersistenceUnit.
        -->
        <property name="packagesToScan" value="progfun.spring.data.domain"/>
    </bean>


</beans>

